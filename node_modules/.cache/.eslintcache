[{"/home/equinox/repos/top-cv/src/index.js":"1","/home/equinox/repos/top-cv/src/App.js":"2","/home/equinox/repos/top-cv/src/reportWebVitals.js":"3","/home/equinox/repos/top-cv/src/components/name.js":"4","/home/equinox/repos/top-cv/src/components/summary.js":"5","/home/equinox/repos/top-cv/src/components/education.js":"6","/home/equinox/repos/TOP-CV_Generator/src/index.js":"7","/home/equinox/repos/TOP-CV_Generator/src/App.js":"8","/home/equinox/repos/TOP-CV_Generator/src/components/name.js":"9","/home/equinox/repos/TOP-CV_Generator/src/components/summary.js":"10","/home/equinox/repos/TOP-CV_Generator/src/components/education.js":"11"},{"size":256,"mtime":1675300848795,"results":"12","hashOfConfig":"13"},{"size":1879,"mtime":1675769490886,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1675300669141,"results":"15","hashOfConfig":"13"},{"size":6788,"mtime":1675768355738,"results":"16","hashOfConfig":"13"},{"size":6938,"mtime":1675768410614,"results":"17","hashOfConfig":"13"},{"size":3956,"mtime":1675768419590,"results":"18","hashOfConfig":"13"},{"size":256,"mtime":1675300848795,"results":"19","hashOfConfig":"20"},{"size":1879,"mtime":1675769490886,"results":"21","hashOfConfig":"20"},{"size":6788,"mtime":1675768355738,"results":"22","hashOfConfig":"20"},{"size":6938,"mtime":1675768410614,"results":"23","hashOfConfig":"20"},{"size":3956,"mtime":1675768419590,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i6qlkv",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vuyfbl",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/home/equinox/repos/top-cv/src/index.js",[],[],"/home/equinox/repos/top-cv/src/App.js",["62","63"],[],"/home/equinox/repos/top-cv/src/reportWebVitals.js",[],[],"/home/equinox/repos/top-cv/src/components/name.js",["64","65","66"],[],"/home/equinox/repos/top-cv/src/components/summary.js",["67","68","69","70"],[],"/home/equinox/repos/top-cv/src/components/education.js",["71","72"],[],"/home/equinox/repos/TOP-CV_Generator/src/index.js",[],[],"/home/equinox/repos/TOP-CV_Generator/src/App.js",["73","74"],[],"import React, {Component} from 'react';\nimport './App.css';\nimport {Name} from './components/name';\nimport Summary from './components/summary';\nimport Education from './components/education';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.previewBtnF = this.previewBtnF.bind(this);\n    this.editBtnF = this.editBtnF.bind(this);\n    \n    this.state = {\n      toggleButtons: <ShowBtn previewBtn = {this.previewBtnF} />,\n    }\n  }\n\n  previewBtnF () {\n    console.log('previewed!')\n\n    const allButtons = document.querySelectorAll('.toggleVisual');\n\n    for (const button of allButtons) {\n      button.classList.add('hideBtn');\n    }\n\n    this.setState({\n      toggleButtons: <EditBtn editBtn = {this.editBtnF} />\n    })\n  };\n\n  editBtnF() {\n    console.log('edited!')\n\n    const allButtons = document.querySelectorAll('.toggleVisual');\n    for (const button of allButtons) {\n      button.classList.remove('hideBtn');\n    }\n\n    this.setState({\n      toggleButtons: <ShowBtn previewBtn = {this.previewBtnF} />,\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div id='header'>CV Generator</div>\n        <div id=\"mainWrapper\">\n          <div id='previewDiv'>{this.state.toggleButtons}</div>\n          \n          <div id='leftWrapper'>\n            <Name />\n          </div>\n          <div id='rightWrapper'>\n            <Summary />\n            <Education />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass ShowBtn extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <button type='button' onClick={this.props.previewBtn}>Show Preview</button>\n    )\n  }\n}\n\nclass EditBtn extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <button type='button' onClick={this.props.editBtn}>Edit Preview</button>\n    )\n  }\n}\n\nexport default App;\n","/home/equinox/repos/TOP-CV_Generator/src/components/name.js",["75","76","77"],[],"import React, {Component} from 'react';\n\nclass Name extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullName: {\n                nameS: 'John',\n                lname: 'Shepard'\n            },\n            \n            contacts: {\n                phoneNum: '123-456-789',\n                emailAdd: 'totallyrealemail@foo.com'\n            },\n\n            hobbies: <DefaultHobbies />,\n\n            listItem: [],    \n          }\n        this.nameEditF = this.nameEditF.bind(this);\n        this.nameSubmitF = this.nameSubmitF.bind(this);\n        \n        this.contactEditF = this.contactEditF.bind(this);\n        this.contactSubmitF = this.contactSubmitF.bind(this);\n\n        this.interestEditF = this.interestEditF.bind(this);\n        this.interestAddF = this.interestAddF.bind(this);\n        this.clearInterestF = this.clearInterestF.bind(this);\n\n        }\n       \n        nameEditF() {\n      \n          this.setState({\n            fullName: {\n                nameS: <NameForm  nameSubmit= {this.nameSubmitF} namePlaceholder={this.state.fullName.nameS} lastPlaceholder={this.state.fullName.lname} />,\n            }\n          })\n          document.querySelector('#nameEditBtn').classList.add('hideBtn');\n        }\n\n        contactEditF(){\n          console.log('Edit has been clicked!')\n\n          this.setState({\n            contacts: {\n              phoneNum: <ContactForm contactSubmitF={this.contactSubmitF} contactPlaceholder={this.state.contacts.phoneNum} emailPlaceholder={this.state.contacts.emailAdd}/>\n            }\n          })\n          document.querySelector('#contactEditBtn').classList.add('hideBtn'); \n        };\n\n        interestEditF() {\n          this.setState({\n            hobbies:  <InterestForm interestAdd={this.interestAddF} clearInterest={this.clearInterestF}/>\n          })\n        }\n      \n        nameSubmitF(e) {\n          e.preventDefault();\n          console.log('Submitted!');\n          \n          this.setState({\n            fullName: {\n                nameS: document.querySelector('#nameInput').value,\n                lname: document.querySelector('#lastInput').value\n            }\n          })\n          document.querySelector('#nameEditBtn').classList.remove('hideBtn');\n        };\n\n        contactSubmitF(e) {\n          e.preventDefault();\n          console.log('Submitted');\n          \n          this.setState({\n            contacts: {\n              phoneNum: document.querySelector('#phoneInput').value,\n              emailAdd: document.querySelector('#emailInput').value,\n            }\n          })\n          document.querySelector('#contactEditBtn').classList.remove('hideBtn'); \n        }\n\n        interestAddF(e) {\n          e.preventDefault();\n          console.log('interestAdded!');\n\n          this.setState({\n            hobbies: '',\n            listItem: this.state.listItem.concat(document.querySelector('#interestInput').value),\n          })\n\n        }\n\n        clearInterestF(deleteItem){\n          const newItems = this.state.listItem.filter((item => item !== deleteItem));\n\n          this.setState({\n            listItem: newItems,\n          })\n          console.log(newItems);\n        }\n\n        render() {\n            return (\n            <div id='personDetailsWrapper'>\n                <div className='nameDiv'>\n                    <div className=\"fullName\">{this.state.fullName.nameS} {this.state.fullName.lname}</div>\n                    <div><button className='toggleVisual' id='nameEditBtn' type='button' onClick={this.nameEditF}>Edit</button></div>\n                    </div>\n                \n              <div className='ContactsDiv'>\n                <div className=\"contactWrapper\">\n                  <div className='contactHeader'>Contact:</div>\n                  <button className='toggleVisual' type='button' id='contactEditBtn' onClick={this.contactEditF}>Edit</button>\n                </div>\n                <div>\n                  <div>{this.state.contacts.phoneNum}</div>\n                  <div>{this.state.contacts.emailAdd}</div>\n                </div>\n              </div>\n\n              <div className='InterestDiv'>\n                <div className=\"interestWrapper\">\n                  <div className='interestHeader'>Interests:</div>\n                  <button type='button' className='toggleVisual' onClick={this.interestEditF}>Edit</button>\n                </div>\n                <div>{this.state.hobbies}</div>\n                <ul>\n                {this.state.listItem.map((item, i) => \n                <li id=\"interestItem\" key={i}>{`${item} `}<button className='toggleVisual' type='button' onClick = {()=> this.clearInterestF(item)}>Delete</button></li> , )}\n                </ul>\n              </div>\n            </div>\n        )\n    }\n}\n\nclass NameForm extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div className='nameForm'>\n              <form>\n                  <label htmlFor = \"nameInput\">First Name:</label>\n                  <div><input type = \"text\" id='nameInput'  defaultValue={this.props.namePlaceholder} ></input></div>\n                  <label htmlFor = \"lastInput\">Last Name:</label>\n                  <div><input type = \"text\" id='lastInput' defaultValue={this.props.lastPlaceholder}></input></div>\n                  <button type='submit' onClick={this.props.nameSubmit}>Submit</button>\n              </form>\n            </div>\n        )\n    }\n}\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    return(\n      <div>\n        <form className='contactForm'>\n          <label htmlFor = \"phoneInput\">Phone Number:</label>\n                  <div><input type = \"text\" id='phoneInput'  defaultValue={this.props.contactPlaceholder} ></input></div>\n                  <label htmlFor = \"emailInput\">Email Address:</label>\n                  <div><input type = \"email\" id='emailInput' defaultValue={this.props.emailPlaceholder}></input></div>\n                  <button type='submit' onClick={this.props.contactSubmitF}>Submit</button>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nclass InterestForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    return(\n      <div>\n        <form>\n          <label htmlFor='interestInput'></label>\n          <div><input type='text' id='interestInput' placeholder='example: cooking'></input></div>\n          <div id='interestAddBtn'><button  type='submit' onClick={this.props.interestAdd}>Add</button></div>\n          \n        </form>\n      </div>\n    )\n  }\n}\n\nclass DefaultHobbies extends Component {\n  render(){\n    return(\n      <ul>\n        <li>put</li>\n        <li>your</li>\n        <li>hobbies</li>\n        <li>here</li>\n      </ul>\n    )\n  }\n}\n\n\nexport {Name};","/home/equinox/repos/TOP-CV_Generator/src/components/summary.js",["78","79","80","81"],[],"import React, {Component} from 'react';\n\nclass Summary extends Component{\n    constructor(props){\n        super(props);\n\n        this.editSumF = this.editSumF.bind(this);\n        this.submitSumF = this.submitSumF.bind(this);\n        this.cancelSumF = this.cancelSumF.bind(this);\n\n        this.addWorkExp = this.addWorkExp.bind(this);\n        this.saveExpF = this.saveExpF.bind(this);\n        this.cancelExpF = this.cancelExpF.bind(this);\n        this.deleteExpF = this.deleteExpF.bind(this);\n\n        this.state = {\n            newSum: '',\n            sumText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin vitae rhoncus velit. Nullam vitae nisi mauris. In quam libero, consectetur at rhoncus eget, sodales ut neque. Nullam congue augue nec viverra gravida. Nunc dapibus ut orci nec rhoncus. Quisque gravida ex nisi, nec pharetra orci tincidunt eu. Sed non neque congue metus tristique gravida eget eget mauris. Phasellus eu nibh non erat congue convallis. Praesent faucibus pretium tellus, id hendrerit libero sagittis id.',\n            oldSum: '',\n            \n            workExps: {\n                Exp: '',\n            },\n            expArray: [],\n        }\n    }\n\n    editSumF(){\n        this.setState({\n            oldSum: this.state.sumText,\n            newSum: this.state.oldSum,\n            sumText: <SummaryForm handleChangeSum={this.handleChangeSumF} submitSum={this.submitSumF} cancelSum={this.cancelSumF} sumPlaceholder={this.state.sumText}/>\n        })\n        document.querySelector('#editSumbtn').classList.add('hideBtn');\n    };\n\n    handleChangeSumF = (e) => {\n        this.setState({\n            newSum: e.target.value,\n        }) \n    };\n\n    submitSumF(e){\n        e.preventDefault();\n\n        if(this.state.newSum == ''){\n            this.setState({\n                sumText: this.state.oldSum,\n            })\n        }else{\n            this.setState({\n                oldSum: this.state.newSum,\n                sumText: this.state.newSum,\n            })   \n        }\n        document.querySelector('#editSumbtn').classList.remove('hideBtn');\n    };\n\n    cancelSumF(){\n        this.setState({\n            sumText: this.state.oldSum,\n        })\n        document.querySelector('#editSumbtn').classList.remove('hideBtn');\n        console.log('cancelled');\n    };\n\n    addWorkExp() {\n        console.log('add work exp clicked!');\n\n        this.setState({\n            workExps: {\n                Exp: <WorkExpForm saveExp={this.saveExpF} cancelExp = {this.cancelExpF}/>\n            },\n        })\n    };\n\n    cancelExpF(){\n\n        this.setState({\n            workExps: {\n                Exp: null,\n            }\n        })\n    };\n\n    saveExpF(e) {\n        e.preventDefault();\n        console.log('saved!')\n\n        const jobInput = document.querySelector('#jobInput');\n        const companyInput = document.querySelector('#companyInput');\n        const dateInput = document.querySelector('#dateInput');\n        const descripInput = document.querySelector('#descripInput');\n\n        let allValues = {\n            title: jobInput.value,\n            company: companyInput.value,\n            dates: dateInput.value,\n            description: descripInput.value,\n        }\n        this.setState({\n\n            workExps: {\n                Exp: null,\n            },\n            expArray: this.state.expArray.concat(allValues),\n        })\n        console.log(this.state.expArray);\n    }\n\n    deleteExpF(deleteItem) {\n\n        const newExp = this.state.expArray.filter(otherItem => otherItem !== deleteItem);\n\n        this.setState({\n            expArray: newExp,\n        })\n    }\n\n    render(){\n        return(\n            <div id='sumWrapper'>\n                <div className='sumDiv'>\n                    <div className=\"sumWrapper\">\n                        <div className='sumHeader'>Summary:</div>\n                        <button className='toggleVisual' type='button' onClick={this.editSumF} id='editSumbtn'>Edit</button>\n                    </div>\n                    <div id='summaryText'>{this.state.sumText}</div>\n                </div>\n                \n                <div className='workExpDiv'>\n                    <div id=\"workWrapper\">\n                        <div className='workHeader'>Work Experience:</div>\n                        <button className='toggleVisual' type='button' onClick={this.addWorkExp}>Add</button>\n                    </div>\n                    <div>{this.state.workExps.Exp}</div>\n                    <ul>\n                    {this.state.expArray.map((item, ind) => <Experiences key={ind} deleteExp={() => this.deleteExpF(item)}  expItems= {Object.keys(item).map((keys, i) =>\n                        <div key={i}>{item[keys]}</div>)}/> )}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n};\n\nclass SummaryForm extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <form>\n                <textarea onChange={this.props.handleChangeSum} id= 'newSummary' cols={80} rows={10} defaultValue={this.props.sumPlaceholder}></textarea>\n                <div>\n                    <button type='submit' onClick={this.props.submitSum}>Submit</button>\n                    <button type='button' onClick={this.props.cancelSum}>Cancel</button>\n                    </div>\n            </form>\n        )\n    }\n};\n\nclass WorkExpForm extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <form id='workExpForm'>\n                <div>\n                    <label htmlFor='jobInput'>Job Title: </label>\n                    <div><input type='text' id='jobInput'></input></div>\n                </div>\n\n                <div>\n                <label htmlFor='companyInput'>Company: </label>\n                    <div><input type='text' id='companyInput'></input></div>\n                </div>\n\n                <div>\n                <label htmlFor='dateInput'>Date Worked: (MM/YYYY - MM/YYYY) </label>\n                    <div><input type='text' id='dateInput'></input></div>\n                </div>\n\n                <div>\n                <label htmlFor='descripInput'>Description: </label>\n                    <div><textarea id='descripInput' cols={80} rows={10} placeholder='your tasks here...'></textarea></div>\n                </div>\n\n                <button type='button' onClick={this.props.saveExp}>Save</button>\n                <button type='button' onClick={this.props.cancelExp}>Cancel</button>\n            </form>\n        )\n    }\n};\n\nclass Experiences extends Component {\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <div id='experiencesContainer'>\n                <div>{this.props.expItems}</div>\n                <button className='toggleVisual' id='deleteExpBtn' type='button' onClick={this.props.deleteExp}>Delete</button>\n                </div>\n        )\n    }\n};\n\n\nexport default Summary;\n\n","/home/equinox/repos/TOP-CV_Generator/src/components/education.js",["82","83"],[],"import React, {Component} from \"react\";\n\nclass Education extends Component{\n    constructor(props){\n        super(props)\n\n        this.addEduc = this.addEduc.bind(this);\n        this.cancelFormF = this.cancelFormF.bind(this);\n        this.saveFormF = this.saveFormF.bind(this);\n        this.removeEducF = this.removeEducF.bind(this);\n\n        this.state = {\n            educRender: '',\n            eduArray: [],\n        }\n    }\n\n    addEduc(){\n        console.log('add Educ!')\n\n        this.setState({\n            educRender: <EducForm saveForm={this.saveFormF} cancelForm={this.cancelFormF}  />\n        })\n    }\n\n    cancelFormF() {\n        this.setState({\n            educRender: null,\n        })\n    }\n\n    saveFormF(){\n        console.log('saved education!');\n\n        let totalValue = {\n            school: document.querySelector('#schoolInput').value,\n            date: document.querySelector('#edateInput').value,\n            degree: document.querySelector('#degree').value,\n            course: document.querySelector('#courseInput').value,\n        };\n\n        this.setState({\n            educRender: '',\n            eduArray: this.state.eduArray.concat(totalValue),\n        })\n\n        console.log(this.state.eduArray)\n    }\n\n    removeEducF(deleteItem) {\n        console.log('deleted');\n\n        const newEduc = this.state.eduArray.filter(currentItem => currentItem !== deleteItem);\n\n        this.setState({\n            eduArray: newEduc,\n        })\n\n    }\n    render(){\n        return(\n            <div className=\"educDiv\">\n                <div id=\"educWrapper\">\n                    <div id=\"educHeader\">Education</div>\n                    <button className='toggleVisual' type=\"button\" onClick={this.addEduc}>Add</button>\n                </div>\n                <div>{this.state.educRender}</div>\n                <ul>\n                    {this.state.eduArray.map((item, i) => <EducationList key={i} removeEduc={()=> this.removeEducF(item)} educItems = {Object.keys(item).map((key, i) => \n                     <div key={i}>{item[key]}</div>   )} />)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nclass EducForm extends Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <form id=\"educForm\">\n                <label htmlFor=\"schoolInput\">School:</label>\n                <div><input type='text' id=\"schoolInput\"></input></div>\n\n                <label htmlFor=\"edateInput\">Date Attended: (MM/YYYY - MM/YYYY)</label>\n                <div><input type='text' id=\"edateInput\"></input></div>\n\n                <label htmlFor=\"degreeSelect\">Degree:</label>\n                <div>\n                    <select id=\"degree\">\n                    <option value=\"none\">None</option>\n                    <option value=\"High School or equivalent\">High School or equivalent</option>\n                    <option value=\"Associate\">Associate</option>\n                    <option value=\"Bachelor's\">Bachelor's</option>\n                    <option value=\"Master's\">Master's</option>\n                    <option value=\"Doctorate\">Doctorate</option>\n                    </select>\n                </div>\n\n                <label htmlFor=\"courseInput\">Course:</label>\n                <div><input type='text' id='courseInput'></input></div>\n\n                <div id=\"educBtns\">\n                    <button type=\"button\" onClick={this.props.saveForm}>Save</button>\n                    <button type=\"button\" onClick={this.props.cancelForm}>Cancel</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nclass EducationList extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return (\n            <div id ='educContainer'>\n            <div>{this.props.educItems}</div>\n            <button className='toggleVisual' type=\"button\" id=\"removeEducBtn\" onClick={this.props.removeEduc}>Delete</button>\n             </div>\n        )\n    }\n}\n\nexport default Education;",{"ruleId":"84","severity":1,"message":"85","line":69,"column":3,"nodeType":"86","messageId":"87","endLine":71,"endColumn":4},{"ruleId":"84","severity":1,"message":"85","line":81,"column":3,"nodeType":"86","messageId":"87","endLine":83,"endColumn":4},{"ruleId":"84","severity":1,"message":"85","line":143,"column":5,"nodeType":"86","messageId":"87","endLine":145,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":164,"column":3,"nodeType":"86","messageId":"87","endLine":166,"endColumn":4},{"ruleId":"84","severity":1,"message":"85","line":185,"column":3,"nodeType":"86","messageId":"87","endLine":187,"endColumn":4},{"ruleId":"88","severity":1,"message":"89","line":46,"column":30,"nodeType":"90","messageId":"91","endLine":46,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":148,"column":5,"nodeType":"86","messageId":"87","endLine":150,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":166,"column":5,"nodeType":"86","messageId":"87","endLine":168,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":200,"column":5,"nodeType":"86","messageId":"87","endLine":202,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":78,"column":5,"nodeType":"86","messageId":"87","endLine":80,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":115,"column":5,"nodeType":"86","messageId":"87","endLine":117,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":69,"column":3,"nodeType":"86","messageId":"87","endLine":71,"endColumn":4},{"ruleId":"84","severity":1,"message":"85","line":81,"column":3,"nodeType":"86","messageId":"87","endLine":83,"endColumn":4},{"ruleId":"84","severity":1,"message":"85","line":143,"column":5,"nodeType":"86","messageId":"87","endLine":145,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":164,"column":3,"nodeType":"86","messageId":"87","endLine":166,"endColumn":4},{"ruleId":"84","severity":1,"message":"85","line":185,"column":3,"nodeType":"86","messageId":"87","endLine":187,"endColumn":4},{"ruleId":"88","severity":1,"message":"89","line":46,"column":30,"nodeType":"90","messageId":"91","endLine":46,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":148,"column":5,"nodeType":"86","messageId":"87","endLine":150,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":166,"column":5,"nodeType":"86","messageId":"87","endLine":168,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":200,"column":5,"nodeType":"86","messageId":"87","endLine":202,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":78,"column":5,"nodeType":"86","messageId":"87","endLine":80,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":115,"column":5,"nodeType":"86","messageId":"87","endLine":117,"endColumn":6},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]